{"version":3,"sources":["Theme/index.tsx","Theme/theme.tsx","App.styles.ts","components/drawer/drawer.style.ts","components/random/Random.tsx","components/drawer/drawer.tsx","App.tsx","index.tsx"],"names":["defaultMode","ManageThemeContext","createContext","mode","toggle","ThemeManager","children","useState","themeState","setThemeState","Provider","value","backgroundColor","theme","light","dark","textColor","buttonBackgroundColor","buttonTextColor","Wrapper","styled","div","themeConf","Button","button","Random","drawerWidth","history","createBrowserHistory","useStyles","makeStyles","createStyles","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","link","textDecoration","color","palette","text","primary","ResponsiveDrawer","window","food","classes","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","to","className","ListItem","ListItemIcon","ListItemText","exact","path","component","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","src","imageData","alt","foodName","liked","size","disableElevation","getFoods","a","fetch","json","App","useContext","useQuery","data","isLoading","error","console","log","LinearProgress","Grid","map","item","xs","sm","id","client","QueryClient","ReactDOM","render","QueryClientProvider","getElementById"],"mappings":"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","file":"static/js/main.5aaeb168.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react';\nimport { ThemeContext } from './types';\n\nconst defaultMode = 'light';\n\nexport const ManageThemeContext: React.Context<ThemeContext> = createContext({\n  mode: defaultMode,\n  toggle: () => {}\n})\n\nexport const useTheme = () => React.useContext(ManageThemeContext);\n\nexport const ThemeManager: React.FC = ({ children }) => {\n  const [themeState, setThemeState] = useState({\n    mode: defaultMode\n  });\n\n  const toggle = (): void => {\n    setThemeState({ mode: (themeState.mode === 'dark' ? `light` : `dark`) });\n  }\n\n  return (\n    <ManageThemeContext.Provider value={{\n      mode: themeState.mode,\n      toggle: toggle\n    }}>\n      {children}\n    </ManageThemeContext.Provider>\n  );\n}","import theme from 'styled-theming';\n\nexport const backgroundColor: theme.ThemeSet = theme('mode', {\n  light: '#fafafa',\n  dark: '#0e0f11'\n});\n\nexport const textColor: theme.ThemeSet = theme('mode', {\n  light: '#191919',\n  dark: '#fafafa'\n});\n\nexport const buttonBackgroundColor = theme('mode', {\n  light: '#222',\n  dark: '#eee'\n});\n\nexport const buttonTextColor = theme('mode', {\n  light: '#eee',\n  dark: '#222'\n});","import styled from 'styled-components';\n// icons here\nimport * as themeConf from './Theme/theme';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  background-color: ${themeConf.backgroundColor};\n  color: ${themeConf.textColor};\n  text-align: center;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  background: ${themeConf.buttonBackgroundColor};\n  border: 1px solid;\n  border-radius: 0.3em;\n  box-shadow: none;\n  color: ${themeConf.buttonTextColor};\n  cursor: pointer;\n  font-size: 1em;\n  padding: 0.5em 1em;\n;`","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  border: 1px solid;\n\n  img {\n    height: 250px;\n    width: 100%;\n    object-fit: cover;\n    border-bottom: 1px solid;\n  }\n\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;","\n\n\n\nconst Random: React.FC = () => {\n  return (\n    <div>\n      <p>Hello From Random</p>\n    </div>\n  );\n}\n\nexport default Random;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport { Router, Link, Switch, Route } from 'react-router-dom';\nimport {Foods} from '../../App';\nimport {Wrapper} from './drawer.style';\nimport { Button } from '@material-ui/core';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport { createBrowserHistory } from 'history';\n\nimport Random from '../random/Random';\n\nconst drawerWidth = 240;\nconst history = createBrowserHistory();\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(1)\n    },\n    //using\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.text.primary\n    }\n  }),\n);\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  food: Foods;\n}\n\nexport const ResponsiveDrawer: React.FC<Props> = ({window, food}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <Router history={history}>\n      <div>\n        <Link to=\"/\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              {/* HOMEICON */}\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Home\"}/>\n          </ListItem>\n        </Link>\n        <Link to=\"/random\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              {/* HOMEICON */}\n              <MailIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Random Food\"}/>\n          </ListItem>\n        </Link>\n        <Switch>\n          <Route exact path=\"/random\" component={Random} />\n        </Switch>\n      </div>  \n    </Router>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Thai Best Food!!!\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Wrapper>\n        <img src={food.imageData} alt={food.foodName} />\n    <div>\n        <h3>Food Name: {food.foodName}</h3>\n        <p>Liked: {food.liked}</p>\n        <Button\n          size=\"small\"\n          disableElevation\n          variant=\"contained\"\n        >\n          <FavoriteTwoToneIcon />\n        </Button>\n    </div>\n    </Wrapper>\n      </main>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\n\nimport { ThemeProvider } from 'styled-components';\nimport { useTheme } from './Theme';\nimport Grid from '@material-ui/core/Grid';\nimport { LinearProgress } from '@material-ui/core';\n\nimport {Wrapper, Button} from './App.styles';\nimport { ResponsiveDrawer } from './components/drawer/drawer';\n\nexport interface Foods {\n  id: number;\n  foodName: string;\n  liked: number;\n  imageData: string;\n}\n\nconst getFoods = async (): Promise<Foods[]> => {\n  return await (await (fetch('https://foodgenerateapi.herokuapp.com/api/foods'))).json();\n}\n\nconst App: React.FC = () => {\n  const theme = useTheme();\n\n  const { data, isLoading, error } = useQuery<Foods[]>(\n    'foods',\n    getFoods\n  )\n  console.log(data);\n\n  if(error) return <div>....error.....</div>\n  if(isLoading) return <LinearProgress />;\n  \n  return (\n    <ThemeProvider theme={{ mode: theme.mode }}>\n      <Wrapper>\n        <Grid container spacing={3}>\n          {data?.map((food) => (\n            <Grid item key={food.id} xs={12} sm={4}>\n              <ResponsiveDrawer food={food}/>\n            </Grid>\n          ))}\n        </Grid>\n        <div className=\"buttons\">\n        <Button onClick={() => theme.toggle()}>\n          {theme.mode === 'dark' ? 'Light Mode' : 'Dark Mode'}\n        </Button>\n        </div>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeManager } from './Theme';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <ThemeManager>\n    <QueryClientProvider client={client}>\n      <App />\n    </QueryClientProvider>\n  </ThemeManager>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}